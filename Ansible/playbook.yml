---
# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                           Validate the parameters                          |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- hosts:                               localhost
  name:                                "Host tasks"
  gather_facts:                        true

  # -------------------------------------+---------------------------------------8
  #
  # Build the list of tasks to be executed in order here.
  #
  # -------------------------------------+---------------------------------------8

  tasks:
    - name:                            "Example on how to ensure a package is installed"
      ansible.builtin.pip:
        name:                          jmespath
        state:                         present

    - name:                            "Example on how to ensure that a parameter is specified"
      ansible.builtin.assert:
        that:
          - "{{ item_to_check.parameter is defined }}" # Has the variable been defined
          - "{{ item_to_check.parameter | type_debug != 'NoneType' }}" # Is the variable not empty"
          - "{{ item_to_check.parameter | trim | length > 1 }}"
        fail_msg: "{{ item_to_check.error }}"
      loop:
        - {
          parameter:                   "sap_sid",
          error:                       "A SAP deployment requires that sap_sid is provided",
        }
      loop_control:
        loop_var:                      item_to_check

    - name:                            "Example on how to target a specific platform"
      ansible.builtin.assert:
        that:
          - domain_name is defined                    # Has the variable been defined
          - domain_name | type_debug != 'NoneType'    # Does it have a value
          - domain_name | trim | length > 1
        fail_msg:                      'SQL Server deployments require that domain is specified'
      when:
        - platform == 'SQLSERVER'



# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                  Run commands on all  remote hosts                         |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

- hosts: "{{ sap_sid | upper }}_DB  :
    {{ sap_sid | upper }}_SCS :
    {{ sap_sid | upper }}_ERS :
    {{ sap_sid | upper }}_PAS :
    {{ sap_sid | upper }}_APP :
    {{ sap_sid | upper }}_WEB"

  name:                                "Examples on how to run commands on remote hosts"
  gather_facts:                        true
  tasks:

    - name:                            "Calculate information about the OS distribution"
      ansible.builtin.set_fact:
        distro_family:                 "{{ ansible_os_family | upper }}"
        distribution_id:               "{{ ansible_distribution | lower ~ ansible_distribution_major_version }}"
        distribution_full_id:          "{{ ansible_distribution | lower ~ ansible_distribution_version }}"

    - name:                            "Show information"
      ansible.builtin.debug:
        msg:
          - "Distro family:        {{ distro_family }}"
          - "Distribution id:      {{ distribution_id }}"
          - "Distribution full id: {{ distribution_full_id }}"

    - name:                            "Set Python version for {{ distribution_id }}"
      ansible.builtin.set_fact:
        python_version: "python3"

    - name:                            "Set Python version {{ distribution_id }}"
      ansible.builtin.set_fact:
        python_version: "python2"
      when: (ansible_distribution | lower ~ ansible_distribution_major_version) in ['sles_sap12']

    - name:                            "Show how to run a command on all remote host"
      ansible.builtin.command:         "whoami"
      register:                        whoami_results

    - name:                            "Show results"
      ansible.builtin.debug:
        var:                           whoami_results
        verbosity:                     0

    - name:                            "Show how to run a command on just the 'SCS' and 'ERS' hosts"
      ansible.builtin.command:         "whoami"
      register:                        whoami_results
      when: 
        - "'scs' in supported_tiers or 'ers' in supported_tiers "

    - name:                            "0.0 Validations - Variables"
      ansible.builtin.debug:
        var:                           whoami_results
        verbosity:                     0


# /*----------------------------------------------------------------------------8
# |                                    END                                      |
# +------------------------------------4--------------------------------------*/
